<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haruhi.botServer.mapper.SqliteDatabaseInitMapper">
    <insert id="addColumn">
        ALTER TABLE ${tableName} ADD COLUMN ${column} ${type}<if test="notNull"> NOT NULL </if><if test="default != null"> DEFAULT ${default} </if>
    </insert>
    <update id="createChatRecord">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
             id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
             card TEXT,
             nickname TEXT,
             message_id TEXT NOT NULL,
             group_id INTEGER,
             user_id INTEGER NOT NULL,
             self_id INTEGER NOT NULL,
             content TEXT,
             deleted INTEGER NOT NULL DEFAULT 0,
             message_type TEXT NOT NULL,
             `time` DATETIME NOT NULL
        );
    </update>

    <update id="createChatRecordExtend">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
          id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
          chat_record_id INTEGER NOT NULL,
          message_id TEXT NOT NULL,
          raw_ws_message TEXT,
          `time` DATETIME NOT NULL
        );
    </update>

    <update id="createIndex">
        CREATE INDEX IF NOT EXISTS ${tableName}_${column}_IDX ON ${tableName} (${column});
    </update>
    <update id="createPokeReply">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
            `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
            `reply` TEXT NOT NULL
        );
    </update>
    <update id="createCustomReply">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
            `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
            `regex` TEXT NOT NULL,
            `reply` TEXT,
            `deleted` INTEGER NOT NULL DEFAULT 0,
            `is_text` INTEGER NOT NULL DEFAULT 1,
            `relative_path` TEXT,
            `cq_type` TEXT,
            `url` TEXT,
            `group_ids` TEXT,
            `message_type` TEXT
        );
    </update>
    <update id="createWordStrip">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
            `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
            `user_id` INTEGER NOT NULL,
            `group_id` INTEGER NOT NULL,
            `self_id` INTEGER NOT NULL,
            `key_word` TEXT NOT NULL,
            `answer` TEXT NOT NULL,
            `create_time` DATETIME,
            `modify_time` DATETIME
        );
    </update>
    <update id="createPixiv">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
            `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
            `pid` TEXT NOT NULL,
            `title` TEXT NOT NULL,
            `width` INTEGER ,
            `height` INTEGER,
            `view` INTEGER,
            `bookmarks` INTEGER ,
            `img_url` TEXT NOT NULL,
            `img_p` TEXT ,
            `uid` TEXT ,
            `author` TEXT ,
            `is_r18` INTEGER NOT NULL,
            `tags` text NOT NULL
        );
    </update>
    <update id="createSendLikeRecord">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
            `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
            `user_id` INTEGER NOT NULL,
            `self_id` INTEGER NOT NULL,
            `send_time` DATETIME NOT NULL DEFAULT (datetime('now', 'localtime')),
            `times` INTEGER NOT NULL,
            `message_type` TEXT
        );
    </update>
    <update id="createDictionary">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
            `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
            `key` TEXT NOT NULL,
            `content` TEXT NOT NULL,
            `create_time` DATETIME,
            `modify_time` DATETIME
        );
    </update>
    <update id="createGroupInfo">
        CREATE TABLE IF NOT EXISTS `${tableName}` (
          `id` INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
          `self_id` INTEGER NOT NULL,
          `group_id` INTEGER NOT NULL,
          `group_name` TEXT,
          `member_count` INTEGER,
          `max_member_count` INTEGER,
          `group_all_shut` INTEGER,
          `group_remark` TEXT,
          `group_memo` TEXT,
          `group_create_time` DATETIME,
          `group_level` INTEGER
        );
    </update>
    <select id="pragmaTableInfo" resultType="com.haruhi.botServer.entity.TableInfoSqlite">
        PRAGMA table_info(`${tableName}`)
    </select>
</mapper>